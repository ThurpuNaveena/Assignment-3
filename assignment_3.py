# -*- coding: utf-8 -*-
"""Assignment-3.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AxFXG03tzvMFaQUzYhoixB_k-plNtE4f
"""

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import numpy as np
 
 
#if using termux
import subprocess
import shlex
#end if
 
def dir_vec(A,B):
  return B-A
 
def norm_vec(A,B):
  return np.matmul(omat, dir_vec(A,B))
 
#Generate line points
#def line_gen(A,B):
#  len =10
#  dim = A.shape[0]
#  x_AB = np.zeros((dim,len))
#  lam_1 = np.linspace(0,1,len)
#  for i in range(len):
#    temp1 = A + lam_1[i]*(B-A)
#    x_AB[:,i]= temp1.T
#  return x_AB
 
#Generate line intercepts
def line_icepts(n,c):
  e1 = np.array([1,0]) 
  e2 = np.array([0,1]) 
  A = c*e1/(n@e1)
  B = c*e2/(n@e2)
  return A,B
 
#creating x,y, for 3D plotting
xx, yy  = np.meshgrid([-10,10], range(10))
#setting up plot
fig = plt.figure()
ax = fig.add_subplot(111,projection='3d')
 
 
#defining planes: n.T * x = c
n1 = np.array([4,0,5]). reshape ((3,1))
R  = np.array([1,1,-1]).reshape((3,1))
S  = np.array([6,4,-5]).reshape((3,1))
T  = np.array([-4,-2,3]).reshape ((3,1))
c1 = -1
 
#corresponding z for planes
z1 = (c1-n1[0]*xx-n1[1]*yy)/(n1[2])
 
#plotting planes
Plane=ax.plot_surface(xx, yy,z1,label="Plane", color='r',alpha=0.5)
Plane._facecolors2d=Plane._facecolors3d
Plane._edgecolors2d=Plane._edgecolors3d
 
#plotting point
ax.scatter(R[0],R[1],R[2],'o')
ax.text(1.1,1.2,-1.2,'R') 
ax.scatter(S[0],S[1],S[2],'0')
ax.text(6.1,4.2,-5.2,'S')
ax.scatter(T[0],T[1],T[2],'0')
ax.text(-4.1,-2.2,3.2,'T')
 
#show plot
plt.xlabel('$x$');plt.ylabel('$y$');
plt.legend(loc='best');plt.grid()

